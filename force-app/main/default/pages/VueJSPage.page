<apex:page controller="VueJSVFController" sidebar="false" showHeader="false" standardStylesheets="false">
    
    
    <html xmlns:v-on="http://fake.org/fake">
        <script src="https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.js"></script>  
        <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js" integrity="sha512-AA1Bzp5Q0K1KanKKmvN/4d3IRKVlv9PYgwFPvm32nPO6QS8yH1HO7LbgB1pgiOxPtfeg5zEn2ba64MUcqJx6CA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet"/>
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css"/>
        <style>
            html,body{
            background-color:#e5e7eb;
            font-family: 'Dosis', sans-serif;
            font-family: 'Varela Round', sans-serif !important;
            }
        </style>
        
        
        <div id="app">
            
            <table class="table table-success table-striped">
                <tr>
                    <th scope="col">Sr.No</th>
                    <th scope="col">Name</th>
                    <th scope="col">Phone</th>
                    <th scope="col">Website</th>
                    <th scope="col">Action</th>
                </tr>
                <tr v-for="(account, index) in accounts">
                    <td>{{ index }}</td>
                    <td>{{ account.Name }}</td>
                    <td>{{ account.Phone }}</td>
                    <td>{{ account.Website }}</td>
                    <td>
                        <button class="btn btn-success" v-on:click="myFunctionEDIT(account)">EDIT</button>
                        <button class="btn btn-danger"  v-on:click="handleClick(account.Id)">DELETE</button>
                    </td>
                </tr>
            </table>

            
                 <div v-if="value1">I'm rendered!</div>
           
          
            
        </div>
        
        <script>
        
        var app = new Vue({
            el: "#app",
            data: {
                accounts: []
            },
            methods: {

               

                handleClick(name) {
                console.log('Button was clicked',name);
                var currentACcId = name;
                debugger;
                Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.VueJSVFController.DeleteAccountUsingId}', currentACcId ,
                function(result, event) {
                if (event.status) {
                swal(
                'success',
                'Record Deleted successfully',
                'success'
                );
                var data = result;
                // location.replace("https://utilitarianlabs7-dev-ed--c.vf.force.com/apex/hu?core.apexpages.request.devconsole=1")
                setTimeout(function(){
                window.location.replace("https://utilitarianlabs7-auraorg-dev-ed--c.vf.force.com/apex/VueJSPage?core.apexpages.request.devconsole=1");
            }, 2000);
                }else{
                swal(
                'ERROR',
                'Something went wrong !',
                'error'
                );
                 }
            },
                { buffer: false, escape: false, timeout: 30000 }
            );
        },

        myFunctionEDIT(accountRecord){
           alert("Show")
          value1: true;
            debugger;
        //  var accName = accountRecord.Name;
        //  var accPhone = accountRecord.Phone;
        //  var accWebsite = accountRecord.Website;
        //    console.log("Account Record :",accountRecord)
        //    console.log("Account accName :",accName)

             Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.VueJSVFController.updateSelectedAccount}',accountRecord.Name,accountRecord.Phone,accountRecord.Id,
                function(result, event) {
                    if (event.status) {
                       
                    }
                },
                { buffer: false, escape: false, timeout: 30000 }
            );

        }

        },
                          
                          created() {
            debugger;
            var self = this;
            
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.VueJSVFController.getAccounts}',
                function(result, event) {
                    if (event.status) {
                        self.accounts = result;
                    }
                },
                { buffer: false, escape: false, timeout: 30000 }
            );
        }
        });
        
        
        </script>
        
        
        
    </html>
</apex:page>